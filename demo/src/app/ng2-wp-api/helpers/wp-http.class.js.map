{"version":3,"file":"wp-http.class.js","sourceRoot":"","sources":["../inlined/helpers/wp-http.class.ts"],"names":[],"mappings":"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","sourcesContent":["import {Injectable} from '@angular/core';\nimport {Http, RequestOptions, RequestOptionsArgs, ConnectionBackend} from '@angular/http';\nimport {Observable} from 'rxjs/Observable';\n\nimport {ConfigService} from \"../service/config/config.service\";\nimport {WpQueryArgs} from \"./wp-query.class\";\n\n\nexport class WpHttp extends Http {\n\n  constructor(backend: ConnectionBackend,\n              defaultOptions: RequestOptions,\n              private _wpConfig: ConfigService) {\n    super(backend, defaultOptions);\n  }\n\n  direct(url: string): Observable<any> {\n\n    this.onStart();\n    return super.get(url, this.getOptions())\n      .timeout(this._wpConfig.timeOut)\n      .catch((err) => this.onError(err))\n      .finally(() => this.onComplete());\n  }\n\n  get(endpoint: any, args?: WpQueryArgs): Observable<any> {\n\n    this.onStart();\n    return super.get(this.getUrl(endpoint, args), this.getOptions())\n      .timeout(this._wpConfig.timeOut)\n      .catch((err) => this.onError(err))\n      .finally(() => this.onComplete())\n  }\n\n  post(endpoint: any, body: any): Observable<any> {\n\n    this.onStart();\n    return super.post(this.getUrl(endpoint), body, this.getOptions())\n      .timeout(this._wpConfig.timeOut)\n      .catch((err) => this.onError(err))\n      .finally(() => this.onComplete());\n  }\n\n  put(endpoint: any, body: any): Observable<any> {\n\n    this.onStart();\n    return super.put(this.getUrl(endpoint), body, this.getOptions())\n      .timeout(this._wpConfig.timeOut)\n      .catch((err) => this.onError(err))\n      .finally(() => this.onComplete());\n  }\n\n  delete(endpoint: any): Observable<any> {\n\n    this.onStart();\n    return super.delete(this.getUrl(endpoint), this.getOptions())\n      .timeout(this._wpConfig.timeOut)\n      .catch((err) => this.onError(err))\n      .finally(() => this.onComplete());\n  }\n\n  /** Before the request  */\n  private onStart() {\n    /** set loading to true */\n    this._wpConfig.loading.next(true);\n  }\n\n  /** Handle errors */\n  private onError(err): Observable<any> {\n    /** emits and return errors */\n    this._wpConfig.errors.next(err);\n    return Observable.throw(err);\n  }\n\n  /** Request completed */\n  private onComplete() {\n    /** set loading to false */\n    this._wpConfig.loading.next(false);\n  }\n\n  /** Get authKeys in headers for all requests */\n  private getOptions = (): RequestOptionsArgs => {\n    return {headers: this._wpConfig.getAuth()};\n  };\n\n  /** Serialize url endpoint and queryArgs */\n  private getUrl = (endpoint: string, args?: any): string => {\n    let url = this._wpConfig.baseUrl + endpoint;\n    if (args) {\n      /** add args to url */\n      url += '?' + serialize(args);\n    }\n    return url;\n  };\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: ({type: any, decorators?: DecoratorInvocation[]}|null)[] = [\n{type: ConnectionBackend, },\n{type: RequestOptions, },\n{type: ConfigService, },\n];\n}\n\nlet serialize = (obj, prefix?): string => {\n  let str = [];\n  for (let p in obj) {\n    if (obj.hasOwnProperty(p) && obj[p]) {\n      let k = prefix ? prefix + \"[\" + p + \"]\" : p, v = obj[p];\n      str.push(typeof v == \"object\" ?\n        serialize(v, k) :\n      encodeURIComponent(k) + \"=\" + encodeURIComponent(v));\n    }\n  }\n  return str.join(\"&\");\n};\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}