{"version":3,"file":"model.service.js","sourceRoot":"","sources":["../../inlined/service/model/model.service.ts"],"names":[],"mappings":"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","sourcesContent":["import {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\n\nimport {WpHttp} from '../../helpers/wp-http.class';\nimport {ModelInterface} from './model.interface';\nimport {WpQueryArgs} from \"../../helpers/wp-query.class\";\n/**\n * WpModel Service: Get/Add/Update/Delete single from WP API\n */\n\nexport class ModelService implements ModelInterface {\n\n  /** Request Parameters  */\n  private WpQueryArgs: WpQueryArgs;\n  private _id: number;\n  private _body: any;\n\n  constructor(private http: WpHttp, private endpoint: string) {\n    this.WpQueryArgs = new WpQueryArgs({});\n  }\n\n  /**\n   * get\n   * @param id\n   * @param args\n   * @returns {Observable<Response>}\n   */\n  get = (id?: number, args?: WpQueryArgs): Observable<any> => {\n    let reqId = (id) ? id : this._id;\n    let reqArgs = (args) ? args : this.WpQueryArgs;\n    return this.http.get(this.endpoint + reqId, reqArgs)\n      .map(res => {\n        return { data: res.json() }\n      })\n      .catch(err=> {\n          return Observable.of({error: err})\n      });\n  };\n  /**\n   * Add a \"model\" to wordpress\n   * @param body\n   * @returns {Observable<Response>}\n   */\n  add = (body?: any): Observable<any> => {\n    let reqBody = (body) ? body : this._body;\n    return this.http.post(this.endpoint, reqBody)\n      .map(res => {\n        return { data: res.json() }\n      })\n      .catch(err=> {\n          return Observable.of({error: err})\n      });\n  };\n  /**\n   * Update a \"model\" to wordpress\n   * @param id\n   * @param body\n   * @returns {Observable<Response>}\n   */\n  update = (id?: number, body?: any): Observable<any> => {\n    let reqId = (id) ? id : this._id;\n    let reqBody = (body) ? body : this._body;\n    return this.http.put(this.endpoint + reqId, reqBody)\n      .map(res => {\n        return { data: res.json() }\n      })\n      .catch(err=> {\n          return Observable.of({error: err})\n      });\n  };\n  /**\n   * Delete \"model\" from wordpress\n   * @param id\n   * @returns {Observable<Response>}\n   */\n  delete = (id?: number): Observable<any> => {\n    let reqId = (id) ? id : this._id;\n    return this.http.delete(this.endpoint + reqId + \"?force=true\")\n      .map(res => {\n        return { data: res.json() }\n      })\n      .catch(err=> {\n          return Observable.of({error: err})\n      });\n  };\n\n  /**\n   * Set the body\n   * @param body\n   * @returns {ModelService}\n   */\n\n  body = (body: any): ModelService => {\n    this._body = body;\n    return this;\n  };\n\n  /**\n   * Set the id\n   * @param id\n   * @returns {ModelService}\n   */\n  id = (id: number): ModelService => {\n    this._id = id;\n    return this;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: ({type: any, decorators?: DecoratorInvocation[]}|null)[] = [\n{type: WpHttp, },\nnull,\n];\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}