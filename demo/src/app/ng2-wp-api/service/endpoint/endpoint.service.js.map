{"version":3,"file":"endpoint.service.js","sourceRoot":"","sources":["../../inlined/service/endpoint/endpoint.service.ts"],"names":[],"mappings":"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","sourcesContent":["import {Injectable} from '@angular/core';\n\nimport {EndpointInterface} from \"../endpoint/endpoint.interface\";\nimport {CollectionService} from \"../collection/collection.service\";\nimport {ModelService} from \"../model/model.service\";\nimport {WpHttp} from \"../../helpers/wp-http.class\";\nimport {WpEndpoint} from \"../../helpers/wp-endpoints\";\n\n\nexport class EndpointService implements EndpointInterface {\n\n    constructor(private _http: WpHttp, private _type: string) {\n    }\n\n    /**\n     * Switch service type (any)\n     * @param endpoint\n     * @returns {any}\n     */\n    private swithcer(endpoint:any): any{\n        if(this._type === 'collection'){\n            return new CollectionService(this._http, endpoint);\n        }\n        return new ModelService(this._http, endpoint);\n    }\n\n    public endpoint = (endpoint: string): any => {\n        return this.swithcer(endpoint);\n    };\n\n    public posts = ():  any => {\n        let endpoint = WpEndpoint.posts;\n        return this.swithcer(endpoint);\n    };\n    public users = ():  any=> {\n        let endpoint = WpEndpoint.users;\n        return this.swithcer(endpoint);\n    };\n    public categories = ():  any => {\n        let endpoint = WpEndpoint.categories;\n        return this.swithcer(endpoint);\n    };\n    public pages = ():  any=> {\n        let endpoint = WpEndpoint.pages;\n        return this.swithcer(endpoint);\n    };\n\n    public tags = ():  any=> {\n        let endpoint = WpEndpoint.tags;\n        return this.swithcer(endpoint);\n    };\n\n    public comments = ():  any=> {\n        let endpoint = WpEndpoint.comments;\n        return this.swithcer(endpoint);\n    };\n\n    public media = ():  any=> {\n        let endpoint = WpEndpoint.media;\n        return this.swithcer(endpoint);\n    };\n\n    public taxonomies = ():  any => {\n        let endpoint = WpEndpoint.taxonomies;\n        return this.swithcer(endpoint);\n    };\n\n    public statuses = ():  any=> {\n        let endpoint = WpEndpoint.statuses;\n        return  this.swithcer(endpoint);\n    };\n\n    public types = ():  any=> {\n        let endpoint = WpEndpoint.types;\n        return this.swithcer(endpoint);\n    };\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: ({type: any, decorators?: DecoratorInvocation[]}|null)[] = [\n{type: WpHttp, },\nnull,\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}