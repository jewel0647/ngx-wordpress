{"version":3,"file":"auth.service.js","sourceRoot":"","sources":["../../inlined/service/authentication/auth.service.ts"],"names":[],"mappings":"OAGO,EAAC,UAAU,EAAC,MAAM,eAAe;OAIjC,EAAC,aAAa,EAAE,QAAQ,EAAC,MAAM,0BAA0B;OACzD,EAAC,UAAU,EAAC,MAAM,4BAA4B;OAC9C,EAAC,MAAM,EAAC,MAAM,6BAA6B;AAGlD;IAEE,qBAAoB,KAAa,EAAU,OAAsB;QAA7C,UAAK,GAAL,KAAK,CAAQ;QAAU,YAAO,GAAP,OAAO,CAAe;IAEjE,CAAC;IAED,2BAAK,GAAL,UAAM,QAAgB,EAAE,QAAgB,EAAE,QAAkB;QAE1D,uBAAuB;QACvB,IAAI,WAAW,GAAG,IAAI,CAAC,QAAQ,GAAG,GAAG,GAAG,QAAQ,CAAC,CAAC;QAClD,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,QAAQ,CAAC,KAAK,CAAC,CAAC,GAAG,CAChD,UAAC,IAAI;YACH,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;gBACT,kDAAkD;gBAClD,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;oBACb,YAAY,CAAC,OAAO,CAAC,UAAU,EAAE,WAAW,CAAC,CAAC;gBAChD,CAAC;gBACD,IAAI,CAAC,CAAC;oBACJ,YAAY,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;gBACtC,CAAC;gBACD,MAAM,CAAC,IAAI,CAAC;YACd,CAAC;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IAED,6BAAO,GAAP;QAEE,IAAI,KAAK,GAAG,MAAM,CAAC,eAAe,CAAC,CAAC,KAAK,IAAI,SAAS,CAAC;QACvD,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YACV,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,QAAQ,CAAC,OAAO,CAAC,CAAC;QAC7C,CAAC;IACH,CAAC;IAEO,2BAAK,GAAb,UAAc,IAAY,EAAE,IAAc;QAA1C,iBAgBC;QAdC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QAEjC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC,GAAG,CAClD,UAAC,GAAG;YACF,wCAAwC;YACxC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC;gBACvB,KAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;gBACtC,MAAM,CAAC,SAAS,CAAC;YACnB,CAAC;YACD,IAAI,CAAC,CAAC;gBACJ,KAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;gBACjC,MAAM,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC;YACzB,CAAC;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IAED,4BAAM,GAAN;QACE,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;IAC7C,CAAC;IAEI,sBAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;KACnB,CAAC;IACF,kBAAkB;IACX,0BAAc,GAA6D;QAClF,EAAC,IAAI,EAAE,MAAM,GAAG;QAChB,EAAC,IAAI,EAAE,aAAa,GAAG;KACtB,CAAC;IACF,kBAAC;AAAD,CAAC,AA/DD,IA+DC","sourcesContent":["/**\n *  Authentication Service\n */\nimport {Injectable} from \"@angular/core\";\nimport {Observable} from \"rxjs/Observable\";\n\nimport {AuthInterface} from \"./auth.interface\";\nimport {ConfigService, AuthType} from \"../config/config.service\";\nimport {WpEndpoint} from '../../helpers/wp-endpoints';\nimport {WpHttp} from \"../../helpers/wp-http.class\";\n\n\nexport class AuthService implements AuthInterface {\n\n  constructor(private _http: WpHttp, private _config: ConfigService) {\n\n  }\n\n  basic(username: string, password: string, remember?: boolean): Observable<any> {\n\n    /** Encode user keys */\n    let encodedCred = btoa(username + ':' + password);\n    return this.login(encodedCred, AuthType.basic).map(\n      (user)=> {\n        if (user) {\n          /** if login success, store key in localStorage */\n          if (remember) {\n            localStorage.setItem('authKeys', encodedCred);\n          }\n          else {\n            localStorage.removeItem('authKeys');\n          }\n          return user;\n        }\n      });\n  }\n\n  cookies(): Observable<any> {\n\n    let nonce = window['wpApiSettings'].nonce || undefined;\n    if (nonce) {\n      return this.login(nonce, AuthType.cookies);\n    }\n  }\n\n  private login(keys: string, type: AuthType): Observable<any> {\n\n    this._config.setAuth(keys, type);\n\n    return this._http.get(WpEndpoint.authentication).map(\n      (res)=> {\n        /** if login fail, send error message */\n        if (res && res.message) {\n          this._config.errors.next(res.message);\n          return undefined;\n        }\n        else {\n          this._config.setAuth(keys, type);\n          return res.json().body;\n        }\n      });\n  }\n\n  logout() {\n    this._config.setAuth(undefined, undefined);\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: ({type: any, decorators?: DecoratorInvocation[]}|null)[] = [\n{type: WpHttp, },\n{type: ConfigService, },\n];\n}\n\n\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}