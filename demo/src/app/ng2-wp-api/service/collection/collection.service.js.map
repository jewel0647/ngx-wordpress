{"version":3,"file":"collection.service.js","sourceRoot":"","sources":["../../inlined/service/collection/collection.service.ts"],"names":[],"mappings":"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","sourcesContent":["/** Collection Service: request a collection of objects\n * (Posts, Pages, Comments, Media, Custom Endpoint ... etc)\n * */\n\nimport {Injectable} from \"@angular/core\";\nimport {Observable} from \"rxjs/Observable\";\n\nimport {WpQueryArgs} from \"../../helpers/wp-query.class\";\nimport {WpHttp} from \"../../helpers/wp-http.class\";\nimport {CollectionInterface} from \"./collection.interface\";\nimport {Headers} from '@angular/http';\n\n\nexport class CollectionService implements CollectionInterface {\n\n  /** Request Parameter  */\n  private _args: WpQueryArgs;\n\n  /** Collection Pagination Properties */\n  private _pagination: WpPagination;\n  private _items = [];\n\n  constructor(private http: WpHttp, private endpoint: string) {\n    this._args = new WpQueryArgs({});\n  }\n\n  /**\n   * Get the collection\n   * @param args\n   * @returns {Observable<Response>}\n   */\n  public get = (args?: WpQueryArgs): Observable<any> => {\n    /** reset pagination */\n    this._pagination = new WpPagination();\n    if (args) {\n      this._args = args;\n      /** if args.page is provided set the pagination currenPage */\n      if (args.page) {\n        this._pagination.currentPage = args.page;\n      }\n    }\n    return this.fetch().map((res)=> {\n\n      if(res.error){\n        return res;\n      }\n\n      this._items = res;\n      return {\n        data: this._items,\n        pagination: this._pagination\n      };\n    });\n  };\n\n  /**\n   * Get next page of the collection combined with current collection\n   * @returns {any}\n   */\n  public more = (): Observable<any> => {\n    if (this._pagination && this._pagination.hasMore) {\n      /** increment currentPage then set page argument */\n      this._args.page = ++this._pagination.currentPage;\n      return this.fetch().map((res)=> {\n      \n        if(res.error){\n          return res;\n        }\n\n        this._items = this._items.concat(res);\n        return {\n          data: this._items,\n          pagination: this._pagination\n        };\n      });\n    }\n    else {\n      return Observable.of(null);\n    }\n  };\n\n  /**\n   * Get next page of the collection\n   * @returns {any}\n   */\n  public next = (): Observable<any> => {\n    if (this._pagination && this._pagination.hasMore) {\n      /** increment currentPage then set page argument */\n      this._args.page = ++this._pagination.currentPage;\n      return this.fetch().map((res)=> {\n\n        if(res.error){\n          return res;\n        }\n\n        this._items = res;\n        return {\n          data: this._items,\n          pagination: this._pagination\n        };\n      });\n    }\n    else {\n      return Observable.of(null);\n    }\n  };\n\n  /**\n   * Get prev page of the collection\n   * @returns {any}\n   */\n  public prev = (): Observable<any> => {\n    if (this._pagination && this._pagination.hasPrev) {\n      /** decrement currentPage then set page argument */\n      this._args.page = --this._pagination.currentPage;\n      return this.fetch().map((res)=> {\n\n        if(res.error){\n          return res;\n        }\n\n        this._items = res;\n        return {\n          data: this._items,\n          pagination: this._pagination\n        };\n      });\n    }\n    else {\n      return Observable.of(null);\n    }\n  };\n\n  /**\n   * Fires the final request\n   * @returns {Observable<any>}\n   */\n  private fetch = (): Observable<any> => {\n\n    return this.http.get(this.endpoint, this._args).map(\n      (res) => {\n        /** Set pagination  */\n        this.setPagination(res.headers);\n        return res.json();\n      }\n    ).catch((err) => {\n      /** return errors in form of res.error */\n      return Observable.of({error: err});\n    });\n  };\n\n  /**\n   * Set the pagination from collection response headers\n   * @param headers\n   * @returns {Pagination}\n   */\n  private setPagination = (headers: Headers): WpPagination => {\n\n    /** Fix issue of different property names in response headers */\n    this._pagination.totalPages =\n      +headers.get('X-WP-TotalPages') || +headers.get('X-Wp-TotalPages') || +headers.get('X-Wp-Totalpages') || 0;\n\n    this._pagination.totalObjects =\n      +headers.get('X-WP-Total') || +headers.get('X-Wp-Total') || 0;\n\n    this._pagination.links = headers.get('Link');\n\n    return this._pagination;\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: ({type: any, decorators?: DecoratorInvocation[]}|null)[] = [\n{type: WpHttp, },\nnull,\n];\n}\n\n/**\n * Pagination class holds the current collection response pagination and links\n */\nexport class WpPagination {\n  /** Pagination holds the navigation data and links provided from WP API response header*/\n  constructor(public currentPage: number = 1,\n              public totalPages: number = 0,\n              public totalObjects: number = 0,\n              public links?: any) {\n\n  }\n\n  get hasMore(): boolean {\n    return this.currentPage < this.totalPages;\n  }\n  get hasPrev(): boolean{\n    return this.currentPage > 1;\n  }\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}